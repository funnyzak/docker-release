version: '3.8'

services:
  ai-goofish-monitor:
    image: funnyzak/ai-goofish-monitor:latest
    container_name: ai-goofish-monitor
    restart: unless-stopped
    environment:
      # AI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}

      # Optional: Proxy Configuration
      - PROXY_URL=${PROXY_URL:-}

      # Optional: Notification Services
      - NTFY_TOPIC_URL=${NTFY_TOPIC_URL:-}
      - GOTIFY_URL=${GOTIFY_URL:-}
      - GOTIFY_TOKEN=${GOTIFY_TOKEN:-}
      - BARK_URL=${BARK_URL:-}
      - WX_BOT_URL=${WX_BOT_URL:-}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      - WEBHOOK_METHOD=${WEBHOOK_METHOD:-POST}
      - WEBHOOK_HEADERS=${WEBHOOK_HEADERS:-}
      - WEBHOOK_CONTENT_TYPE=${WEBHOOK_CONTENT_TYPE:-JSON}
      - WEBHOOK_QUERY_PARAMETERS=${WEBHOOK_QUERY_PARAMETERS:-}
      - WEBHOOK_BODY=${WEBHOOK_BODY:-}

      # Browser Configuration
      - LOGIN_IS_EDGE=${LOGIN_IS_EDGE:-false}
      - RUN_HEADLESS=${RUN_HEADLESS:-true}

      # AI Configuration
      - AI_DEBUG_MODE=${AI_DEBUG_MODE:-false}
      - SKIP_AI_ANALYSIS=${SKIP_AI_ANALYSIS:-false}
      - ENABLE_THINKING=${ENABLE_THINKING:-false}

      # Web UI Configuration
      - SERVER_PORT=${SERVER_PORT:-8000}
      - WEB_USERNAME=${WEB_USERNAME:-admin}
      - WEB_PASSWORD=${WEB_PASSWORD:-admin123}

      # Docker Environment
      - RUNNING_IN_DOCKER=true
      - TZ=Asia/Shanghai

    ports:
      - "${SERVER_PORT:-8000}:8000"

    volumes:
      # Mount configuration files
      - ./config.json:/app/config.json:ro
      - ./.env:/app/.env:ro

      # Mount data directory for persistent storage
      - ./data:/app/data

      # Mount login state file (must be provided after initial setup)
      - ./xianyu_state.json:/app/xianyu_state.json:ro

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s