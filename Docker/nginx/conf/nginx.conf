# Load modules - Check if these modules are actually used. Remove unused ones to save resources.
load_module /usr/lib64/nginx/modules/ngx_http_image_filter_module.so;
load_module /usr/lib64/nginx/modules/ngx_stream_module.so;
load_module /usr/lib64/nginx/modules/ngx_http_geoip_module.so;
load_module /usr/lib64/nginx/modules/ngx_http_xslt_filter_module.so;
load_module /usr/lib64/nginx/modules/ngx_stream_geoip_module.so;
# load_module /usr/lib64/nginx/modules/ngx_http_perl_module.so; # Keep commented out
# load_module /usr/lib64/nginx/modules/ngx_mail_module.so;     # Keep commented out

# user  nginx; # Keep commented out or configure user as needed

# 'auto' automatically detects the number of CPU cores, which is usually the best practice.
worker_processes  auto;

error_log /var/log/nginx/error.log warn;

pid /var/run/nginx/nginx.pid;

events {
    # This value should be adjusted based on server memory and file descriptor limits.
    worker_connections  8192; # Increased to 8192, adjust based on actual needs.
    # use epoll; # On Linux systems, Nginx typically automatically selects the most efficient event model (like epoll), no need to explicitly specify.
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    # safe
    more_clear_headers Server;
    server_tokens off;
    underscores_in_headers on;
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;

    # SSL
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";

    log_not_found on;

    # proxy_ignore_client_abort on; # Kept as is, but note that frequent client abortion might lead to resource occupation.

    proxy_set_header Host $host;
    proxy_set_header X-Real-Ip $remote_addr;
    # Optimization Point 4: Use $proxy_add_x_forwarded_for to handle proxy chains correctly.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy true;

    client_max_body_size 20M;                   # Adjust according to actual upload requirements; the default value is usually sufficient if no file uploads are involved.
    client_body_timeout 60s;                   # Appropriately reduce the timeout to prevent resources from being occupied for too long.
    keepalive_timeout 60s;                     # A reasonable keep-alive timeout to avoid excessive connection resource usage. For high-traffic sites, it can be even shorter (e.g., 30s).
    client_header_buffer_size 64k;              # Typically, 64k is enough to handle most request headers.
    large_client_header_buffers 4 64k;          # Increase buffer size if there are many and large request headers.

    proxy_connect_timeout  60s;                # Timeout for Nginx to connect to the backend server.
    proxy_send_timeout  60s;                   # Timeout for the backend server to send data back.
    proxy_read_timeout  60s;                   # Timeout for the backend server to respond after a successful connection.

    fastcgi_connect_timeout 60s;               # Specifies the timeout for nginx to connect to the backend FastCGI server.
    fastcgi_send_timeout 60s;                  # Specifies the timeout for nginx to send requests to the backend after the handshake is completed.
    fastcgi_read_timeout 60s;                  # Specifies the timeout for nginx to receive responses from the backend after the handshake is completed.
    # Note: If your FastCGI scripts might take longer than 60 seconds to execute, you may need to increase fastcgi_read_timeout accordingly.


    include /etc/nginx/conf.d/*.conf;
}
